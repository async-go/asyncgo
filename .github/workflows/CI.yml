name: CI
on: push
jobs:
  rspec:
    runs-on: ubuntu-latest
    container: matteeyah/ruby-yarn:3.0.0-1.22.5
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: asyncgo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache bundler dependencies
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - uses: actions/cache@v2
        name: Cache yarn dependencies
        with:
          path: vendor/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install bundler dependencies
        run: bundle install --without development production --jobs 4 --retry 3 --path vendor/bundle
      - name: Install node dependencies
        run: bin/yarn install --production true --cache-folder vendor/yarn
      - name: Run rspec
        run: bundle exec rspec --tag ~type:system
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres/asyncgo_test
  rspec-system:
    runs-on: ubuntu-latest
    container: matteeyah/ruby-yarn:3.0.0-1.22.5
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: asyncgo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache bundler dependencies
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - uses: actions/cache@v2
        name: Cache yarn dependencies
        with:
          path: vendor/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install bundler dependencies
        run: bundle install --without development production --jobs 4 --retry 3 --path vendor/bundle
      - name: Install node dependencies
        run: bin/yarn install --production true --cache-folder vendor/yarn
      - name: Run rspec system specs
        run: bundle exec rspec --tag type:system
        env:
          DATABASE_URL: postgres://postgres:postgres@postgres/asyncgo_test
  brakeman:
    runs-on: ubuntu-latest
    container: ruby:3.0.0
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache bundler dependencies
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Install bundler dependencies
        run: bundle install --without development production --jobs 4 --retry 3 --path vendor/bundle
      - name: Run brakeman
        run: bundle exec brakeman
  rubocop:
    runs-on: ubuntu-latest
    container: ruby:3.0.0
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache bundler dependencies
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Install bundler dependencies
        run: bundle install --without development production --jobs 4 --retry 3 --path vendor/bundle
      - name: Run rubocop
        run: bundle exec rubocop
  haml-lint:
    runs-on: ubuntu-latest
    container: ruby:3.0.0
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache bundler dependencies
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: Install bundler dependencies
        run: bundle install --without development production --jobs 4 --retry 3 --path vendor/bundle
      - name: Run haml-lint
        run: bundle exec haml-lint
  standard:
    runs-on: ubuntu-latest
    container: node:current-buster
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache yarn dependencies
        with:
          path: vendor/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install node dependencies
        run: yarn install --cache-folder vendor/yarn
      - name: Run standard
        run: yarn exec standard
  markdownlint:
    runs-on: ubuntu-latest
    container: node:current-buster
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache yarn dependencies
        with:
          path: vendor/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install node dependencies
        run: yarn install --cache-folder vendor/yarn
      - name: Run markdownlint
        run: yarn exec markdownlint "*.md"
  vale:
    runs-on: ubuntu-latest
    container: jdkato/vale:v2.3.3
    steps:
      - uses: actions/checkout@v2
      - name: Run vale
        run: vale "*.md"
